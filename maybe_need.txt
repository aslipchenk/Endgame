//  for (int j = 0; j < 5; j++)
    // {
    //     for (int i = 0; i < 5; i++) 
    //     {
    //     game->enemy = game->enemyValues[i];
    //     game->enemy.w = 48;
    //     game->enemy.h = 48;
    //     float mw = 48, mh = 48;
    //     float mx = game->enemyValues[j+1].x, my = game->enemyValues[j+1].y;
    //     float bx = game->enemy.x, by = game->enemy.y, bw = game->enemy.w, bh = game->enemy.h;

    //     if (mx + mw / 2 > bx && mx + mw / 2 < bx + bw)
    //     {
    //         //are we bumping our head?
    //         if (my < by + bh && my > by && game->enemyValues[j+1].dy < 0)
    //         {
    //             //correct y
    //             game->enemyValues[j+1].y = by + bh;
    //             my = by + bh;

    //             //bumped our head, stop any jump velocity
    //             game->enemyValues[j+1].dy = 0;
    //             game->enemy.onLedge = 1;
    //         }
    //     }
    //     if (mx + mw > bx && mx < bx + bw)
    //     {
    //         //are we landing on the ledge
    //         if (my + mh > by && my < by && game->enemyValues[j+1].dy > 0)
    //         {
    //             //correct y
    //             game->enemyValues[j+1].y = by - mh;
    //             my = by - mh;

    //             //landed on this ledge, stop any jump velocity
    //             game->enemyValues[j+1].dy = 0;
    //             game->enemy.onLedge = 1;
    //         }
    //     }

    //     if (my + mh > by && my < by + bh)
    //     {
    //         //rubbing against right edge
    //         if (mx < bx + bw && mx + mw > bx + bw && game->enemyValues[j+1].dx < 0)
    //         {
    //             //correct x
    //             game->enemyValues[j+1].x = bx + bw;
    //             mx = bx + bw;

    //             game->enemyValues[j+1].dx = 0;
    //         }
    //         //rubbing against left edge
    //         else if (mx + mw > bx && mx < bx && game->enemyValues[j+1].dx > 0)
    //         {
    //             //correct x
    //             game->enemyValues[j+1].x = bx - mw;
    //             mx = bx - mw;

    //             game->enemyValues[j+1].dx = 0;
    //         }
    //     }
    //     }
    // }